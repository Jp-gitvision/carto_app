{"ast":null,"code":"var _jsxFileName = \"/Users/jujupeneau/Desktop/Wildcodeschool_Data_engineer/projet/Lama_dev_login/react_simple_copy/src/components/Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport 'leaflet/dist/leaflet.css';\nimport { Icon } from 'leaflet';\nimport { API } from '../services/API';\n\n// URL du fichier GeoJSON (placer le fichier dans le dossier public)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geojsonUrl = \"/departements.geojson\";\n\n// Composant principal de la carte\nconst Map = ({\n  center,\n  zoom,\n  onRegionClick\n}) => {\n  _s();\n  const customerIcon = new Icon({\n    iconUrl: '/img/gps.png',\n    iconSize: [28, 28]\n  });\n  const [regions, setRegions] = useState([]);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [villes, setVilles] = useState([]);\n  useEffect(() => {\n    const getdataregion = async () => {\n      try {\n        const response = await API.get(\"/api/personnes-agees-par-regions\", {\n          withCredentials: true\n        });\n        const responseData = await response.data;\n        setRegions(responseData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    getdataregion();\n  }, []);\n  useEffect(() => {\n    fetch(geojsonUrl).then(response => response.json()).then(data => setGeojsonData(data)).catch(error => console.error('Erreur lors de la récupération du fichier GeoJSON:', error));\n  }, []);\n  const handleRegionClick = async regionName => {\n    try {\n      setSelectedRegion(regionName);\n      const response = await API.get(`/api/villes-par-regions/${regionName}`, {\n        withCredentials: true\n      });\n      const responseData = await response.data;\n      setVilles(responseData);\n      onRegionClick(regionName);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: zoom,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), geojsonData && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: geojsonData,\n        style: () => ({\n          color: 'white',\n          weight: 2,\n          opacity: 1,\n          dashArray: '3',\n          fillOpacity: 0.7,\n          fillColor: '#1396D9'\n        }),\n        onEachFeature: (feature, layer) => {\n          layer.on({\n            mouseover: e => {\n              const layer = e.target;\n              layer.setStyle({\n                dashArray: \"\",\n                fillColor: \"#BD0026\",\n                fillOpacity: 0.7,\n                weight: 2,\n                opacity: 1,\n                color: \"white\"\n              });\n            },\n            mouseout: e => {\n              const layer = e.target;\n              layer.setStyle({\n                fillOpacity: 0.7,\n                opacity: 1,\n                weight: 2,\n                dashArray: \"3\",\n                color: 'white',\n                fillColor: '#1396D9'\n              });\n            },\n            click: () => {\n              handleRegionClick(feature.properties.name);\n            }\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        children: selectedRegion && villes.length > 0 ? villes.map(ville => /*#__PURE__*/_jsxDEV(Marker, {\n          icon: customerIcon,\n          position: [ville.latitude, ville.longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [ville.nom, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 49\n            }, this), \"F65-79ans : \", ville.femmes_65_79, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 70\n            }, this), \"F+80ans : \", ville.femmes_80_plus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 70\n            }, this), \"H65-79ans : \", ville.hommes_65_79, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 70\n            }, this), \"H+80ans: \", ville.hommes_80_plus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 69\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this)\n        }, ville.nom, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this)) : Object.keys(regions).map(region => /*#__PURE__*/_jsxDEV(Marker, {\n          icon: customerIcon,\n          position: [regions[region].latitude, regions[region].longitude],\n          eventHandlers: {\n            click: () => {\n              handleRegionClick(region);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"R\\xE9gion : \", region, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 55\n            }, this), \"F65-79ans : \", regions[region].femmes_65_79, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 80\n            }, this), \"F+80ans : \", regions[region].femmes_80_plus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 80\n            }, this), \"H65-79ans : \", regions[region].hommes_65_79, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 80\n            }, this), \"H+80ans: \", regions[region].hommes_80_plus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 79\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this)\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"naidfNdOlsDVb1UyyyUQwkQzgjs=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","GeoJSON","MarkerClusterGroup","Icon","API","jsxDEV","_jsxDEV","geojsonUrl","Map","center","zoom","onRegionClick","_s","customerIcon","iconUrl","iconSize","regions","setRegions","geojsonData","setGeojsonData","selectedRegion","setSelectedRegion","villes","setVilles","getdataregion","response","get","withCredentials","responseData","data","error","console","fetch","then","json","catch","handleRegionClick","regionName","style","height","width","children","url","fileName","_jsxFileName","lineNumber","columnNumber","color","weight","opacity","dashArray","fillOpacity","fillColor","onEachFeature","feature","layer","on","mouseover","e","target","setStyle","mouseout","click","properties","name","length","map","ville","icon","position","latitude","longitude","nom","femmes_65_79","femmes_80_plus","hommes_65_79","hommes_80_plus","Object","keys","region","eventHandlers","_c","$RefreshReg$"],"sources":["/Users/jujupeneau/Desktop/Wildcodeschool_Data_engineer/projet/Lama_dev_login/react_simple_copy/src/components/Map.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport 'leaflet/dist/leaflet.css';\nimport { Icon } from 'leaflet';\nimport { API } from '../services/API';\n\n// URL du fichier GeoJSON (placer le fichier dans le dossier public)\nconst geojsonUrl = \"/departements.geojson\";\n\n// Composant principal de la carte\nconst Map = ({ center, zoom, onRegionClick }) => {\n    const customerIcon = new Icon({\n        iconUrl: '/img/gps.png',\n        iconSize: [28, 28],\n    });\n    const [regions, setRegions] = useState([]);\n    const [geojsonData, setGeojsonData] = useState(null);\n    const [selectedRegion, setSelectedRegion] = useState(null);\n    const [villes, setVilles] = useState([]);\n\n    useEffect(() => {\n        const getdataregion = async () => {\n            try {\n                const response = await API.get(\"/api/personnes-agees-par-regions\", {\n                    withCredentials: true,\n                });\n                const responseData = await response.data;\n                setRegions(responseData);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        getdataregion();\n    }, []);\n\n    useEffect(() => {\n        fetch(geojsonUrl)\n            .then(response => response.json())\n            .then(data => setGeojsonData(data))\n            .catch(error => console.error('Erreur lors de la récupération du fichier GeoJSON:', error));\n    }, []);\n\n    const handleRegionClick = async (regionName) => {\n        try {\n            setSelectedRegion(regionName);\n            const response = await API.get(`/api/villes-par-regions/${regionName}`, {\n                withCredentials: true,\n            });\n            const responseData = await response.data;\n            setVilles(responseData);\n            onRegionClick(regionName);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    return (\n        <div style={{ height: '100vh', width: '100%' }}>\n            <MapContainer center={center} zoom={zoom} style={{ height: '100%', width: '100%' }}>\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n                {geojsonData && (\n                    <GeoJSON\n                        data={geojsonData}\n                        style={() => ({\n                            color: 'white',\n                            weight: 2,\n                            opacity: 1,\n                            dashArray: '3',\n                            fillOpacity: 0.7,\n                            fillColor: '#1396D9'\n                        })}\n                        onEachFeature={(feature, layer) => {\n                            layer.on({\n                                mouseover: (e) => {\n                                    const layer = e.target;\n                                    layer.setStyle({\n                                        dashArray: \"\",\n                                        fillColor: \"#BD0026\",\n                                        fillOpacity: 0.7,\n                                        weight: 2,\n                                        opacity: 1,\n                                        color: \"white\",\n                                    });\n                                },\n                                mouseout: (e) => {\n                                    const layer = e.target;\n                                    layer.setStyle({\n                                        fillOpacity: 0.7,\n                                        opacity: 1,\n                                        weight: 2,\n                                        dashArray: \"3\",\n                                        color: 'white',\n                                        fillColor: '#1396D9'\n                                    });\n                                },\n                                click: () => {\n                                    handleRegionClick(feature.properties.name);\n                                }\n                            });\n                        }}\n                    />\n                )}\n\n                <MarkerClusterGroup>\n                    {selectedRegion && villes.length > 0 ? (\n                        villes.map(ville => (\n                            <Marker icon={customerIcon} key={ville.nom} position={[ville.latitude, ville.longitude]}>\n                                <Popup>\n                                    {ville.nom} <br />\n                                    F65-79ans : {ville.femmes_65_79} <br />\n                                    F+80ans : {ville.femmes_80_plus} <br />\n                                    H65-79ans : {ville.hommes_65_79} <br />\n                                    H+80ans: {ville.hommes_80_plus} <br />\n                                </Popup>\n                            </Marker>\n                        ))\n                    ) : (\n                        Object.keys(regions).map(region => (\n                            <Marker \n                                icon={customerIcon}\n                                key={region}\n                                position={[regions[region].latitude, regions[region].longitude]}\n                                eventHandlers={{\n                                    click: () => {\n                                        handleRegionClick(region);\n                                    },\n                                }}\n                            >\n                                <Popup>\n                                    Région : {region} <br />\n                                    F65-79ans : {regions[region].femmes_65_79} <br />\n                                    F+80ans : {regions[region].femmes_80_plus} <br />\n                                    H65-79ans : {regions[region].hommes_65_79} <br />\n                                    H+80ans: {regions[region].hommes_80_plus} <br />\n                                </Popup>\n                            </Marker>\n                        ))\n                    )}\n                </MarkerClusterGroup>\n            </MapContainer>\n        </div>\n    );\n};\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,OAAO,QAAQ,eAAe;AAC/E,OAAOC,kBAAkB,MAAM,uBAAuB;AACtD,OAAO,0BAA0B;AACjC,SAASC,IAAI,QAAQ,SAAS;AAC9B,SAASC,GAAG,QAAQ,iBAAiB;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG,uBAAuB;;AAE1C;AACA,MAAMC,GAAG,GAAGA,CAAC;EAAEC,MAAM;EAAEC,IAAI;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAMC,YAAY,GAAG,IAAIV,IAAI,CAAC;IAC1BW,OAAO,EAAE,cAAc;IACvBC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;EACrB,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAM4B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,GAAG,CAAC,kCAAkC,EAAE;UAC/DC,eAAe,EAAE;QACrB,CAAC,CAAC;QACF,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAI;QACxCZ,UAAU,CAACW,YAAY,CAAC;MAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAEDN,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACZoC,KAAK,CAACzB,UAAU,CAAC,CACZ0B,IAAI,CAACR,QAAQ,IAAIA,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CACjCD,IAAI,CAACJ,IAAI,IAAIV,cAAc,CAACU,IAAI,CAAC,CAAC,CAClCM,KAAK,CAACL,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAAC,CAAC;EACnG,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,iBAAiB,GAAG,MAAOC,UAAU,IAAK;IAC5C,IAAI;MACAhB,iBAAiB,CAACgB,UAAU,CAAC;MAC7B,MAAMZ,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,GAAG,CAAC,2BAA2BW,UAAU,EAAE,EAAE;QACpEV,eAAe,EAAE;MACrB,CAAC,CAAC;MACF,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAI;MACxCN,SAAS,CAACK,YAAY,CAAC;MACvBjB,aAAa,CAAC0B,UAAU,CAAC;IAC7B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIxB,OAAA;IAAKgC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC3CnC,OAAA,CAACT,YAAY;MAACY,MAAM,EAAEA,MAAO;MAACC,IAAI,EAAEA,IAAK;MAAC4B,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAC/EnC,OAAA,CAACR,SAAS;QAAC4C,GAAG,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAErE5B,WAAW,iBACRZ,OAAA,CAACL,OAAO;QACJ4B,IAAI,EAAEX,WAAY;QAClBoB,KAAK,EAAEA,CAAA,MAAO;UACVS,KAAK,EAAE,OAAO;UACdC,MAAM,EAAE,CAAC;UACTC,OAAO,EAAE,CAAC;UACVC,SAAS,EAAE,GAAG;UACdC,WAAW,EAAE,GAAG;UAChBC,SAAS,EAAE;QACf,CAAC,CAAE;QACHC,aAAa,EAAEA,CAACC,OAAO,EAAEC,KAAK,KAAK;UAC/BA,KAAK,CAACC,EAAE,CAAC;YACLC,SAAS,EAAGC,CAAC,IAAK;cACd,MAAMH,KAAK,GAAGG,CAAC,CAACC,MAAM;cACtBJ,KAAK,CAACK,QAAQ,CAAC;gBACXV,SAAS,EAAE,EAAE;gBACbE,SAAS,EAAE,SAAS;gBACpBD,WAAW,EAAE,GAAG;gBAChBH,MAAM,EAAE,CAAC;gBACTC,OAAO,EAAE,CAAC;gBACVF,KAAK,EAAE;cACX,CAAC,CAAC;YACN,CAAC;YACDc,QAAQ,EAAGH,CAAC,IAAK;cACb,MAAMH,KAAK,GAAGG,CAAC,CAACC,MAAM;cACtBJ,KAAK,CAACK,QAAQ,CAAC;gBACXT,WAAW,EAAE,GAAG;gBAChBF,OAAO,EAAE,CAAC;gBACVD,MAAM,EAAE,CAAC;gBACTE,SAAS,EAAE,GAAG;gBACdH,KAAK,EAAE,OAAO;gBACdK,SAAS,EAAE;cACf,CAAC,CAAC;YACN,CAAC;YACDU,KAAK,EAAEA,CAAA,KAAM;cACT1B,iBAAiB,CAACkB,OAAO,CAACS,UAAU,CAACC,IAAI,CAAC;YAC9C;UACJ,CAAC,CAAC;QACN;MAAE;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACJ,eAEDxC,OAAA,CAACJ,kBAAkB;QAAAuC,QAAA,EACdrB,cAAc,IAAIE,MAAM,CAAC2C,MAAM,GAAG,CAAC,GAChC3C,MAAM,CAAC4C,GAAG,CAACC,KAAK,iBACZ7D,OAAA,CAACP,MAAM;UAACqE,IAAI,EAAEvD,YAAa;UAAiBwD,QAAQ,EAAE,CAACF,KAAK,CAACG,QAAQ,EAAEH,KAAK,CAACI,SAAS,CAAE;UAAA9B,QAAA,eACpFnC,OAAA,CAACN,KAAK;YAAAyC,QAAA,GACD0B,KAAK,CAACK,GAAG,EAAC,GAAC,eAAAlE,OAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,gBACN,EAACqB,KAAK,CAACM,YAAY,EAAC,GAAC,eAAAnE,OAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,cAC7B,EAACqB,KAAK,CAACO,cAAc,EAAC,GAAC,eAAApE,OAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,gBAC3B,EAACqB,KAAK,CAACQ,YAAY,EAAC,GAAC,eAAArE,OAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,aAC9B,EAACqB,KAAK,CAACS,cAAc,EAAC,GAAC,eAAAtE,OAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC;QAAC,GAPqBqB,KAAK,CAACK,GAAG;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQlC,CACX,CAAC,GAEF+B,MAAM,CAACC,IAAI,CAAC9D,OAAO,CAAC,CAACkD,GAAG,CAACa,MAAM,iBAC3BzE,OAAA,CAACP,MAAM;UACHqE,IAAI,EAAEvD,YAAa;UAEnBwD,QAAQ,EAAE,CAACrD,OAAO,CAAC+D,MAAM,CAAC,CAACT,QAAQ,EAAEtD,OAAO,CAAC+D,MAAM,CAAC,CAACR,SAAS,CAAE;UAChES,aAAa,EAAE;YACXlB,KAAK,EAAEA,CAAA,KAAM;cACT1B,iBAAiB,CAAC2C,MAAM,CAAC;YAC7B;UACJ,CAAE;UAAAtC,QAAA,eAEFnC,OAAA,CAACN,KAAK;YAAAyC,QAAA,GAAC,cACM,EAACsC,MAAM,EAAC,GAAC,eAAAzE,OAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,gBACZ,EAAC9B,OAAO,CAAC+D,MAAM,CAAC,CAACN,YAAY,EAAC,GAAC,eAAAnE,OAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,cACvC,EAAC9B,OAAO,CAAC+D,MAAM,CAAC,CAACL,cAAc,EAAC,GAAC,eAAApE,OAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,gBACrC,EAAC9B,OAAO,CAAC+D,MAAM,CAAC,CAACJ,YAAY,EAAC,GAAC,eAAArE,OAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,aACxC,EAAC9B,OAAO,CAAC+D,MAAM,CAAC,CAACH,cAAc,EAAC,GAAC,eAAAtE,OAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C;QAAC,GAdHiC,MAAM;UAAApC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeP,CACX;MACJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACe,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAAClC,EAAA,CAtIIJ,GAAG;AAAAyE,EAAA,GAAHzE,GAAG;AAwIT,eAAeA,GAAG;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}