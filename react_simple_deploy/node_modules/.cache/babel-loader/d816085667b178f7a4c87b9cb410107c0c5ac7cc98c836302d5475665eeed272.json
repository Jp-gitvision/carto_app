{"ast":null,"code":"var _jsxFileName = \"/Users/jujupeneau/Desktop/Wildcodeschool_Data_engineer/projet/Lama_dev_login/react_simple_copy/src/pages/Inscription.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Importez useNavigate\nimport { API } from \"../services/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inscription = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  // username : La première valeur du tableau est la valeur actuelle de l'état. À l'initialisation, il s'agit de la valeur que vous avez fournie ('' dans cet exemple).\n  // setUsername : La deuxième valeur est une fonction que vous pouvez appeler pour modifier cet état. Lorsque vous voulez mettre à jour la valeur de username, vous appelez setUsername avec une nouvelle valeur.\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate(); // Initialisation de useNavigate\n\n  const register = async () => {\n    if (!username.trim() || !email.trim() || !password) {\n      alert('Merci de bien remplir tous les champs.');\n      return;\n    }\n    try {\n      const response = await API.post('/inscription', {\n        // trim() est utilisé pour supprimer les espaces blancs avant et après les valeurs des champs, pour s'assurer que l'utilisateur n'a pas entré que des espaces.\n        username: username.trim(),\n        email: email.trim(),\n        password: password\n      });\n      console.log(response.data);\n      navigate('/login'); // Redirection vers la page '/login' en supposant que l'inscription a réussi.\n    } catch (error) {\n      var _error$response;\n      console.error(error);\n      alert(\"L'inscription a échoué: \" + ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Erreur inconnu');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loginTitle\",\n      children: \"Inscrivez-vous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper_inscription\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_inscription\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Identifiant\",\n          onChange: e => setUsername(e.target.value)\n          // Lorsque l'utilisateur saisit un texte dans le champ input, l'événement onChange est déclenché\n          // Lorsque setUsername est appelée, React change la valeur de username dans l'état local du composant à la valeur que l'utilisateur a entrée. React détecte ensuite que l'état a changé.\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\" // Type changé en email\n          ,\n          placeholder: \"Email\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Mot de passe\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: register,\n          children: \"S'inscrire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sign-up-prompt\",\n          children: [\"Vous avez d\\xE9j\\xE0 un compte ? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            children: \"Connectez-vous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Inscription, \"UeJZMfgOBRRIkl1zHWMq9lmVGxA=\", false, function () {\n  return [useNavigate];\n});\n_c = Inscription;\nexport default Inscription;\nvar _c;\n$RefreshReg$(_c, \"Inscription\");","map":{"version":3,"names":["axios","useState","useNavigate","API","jsxDEV","_jsxDEV","Inscription","_s","username","setUsername","password","setPassword","email","setEmail","navigate","register","trim","alert","response","post","console","log","data","error","_error$response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","href","_c","$RefreshReg$"],"sources":["/Users/jujupeneau/Desktop/Wildcodeschool_Data_engineer/projet/Lama_dev_login/react_simple_copy/src/pages/Inscription.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Importez useNavigate\nimport {API} from \"../services/API\";\n\nconst Inscription = () => {\n  const [username, setUsername] = useState('');\n  // username : La première valeur du tableau est la valeur actuelle de l'état. À l'initialisation, il s'agit de la valeur que vous avez fournie ('' dans cet exemple).\n  // setUsername : La deuxième valeur est une fonction que vous pouvez appeler pour modifier cet état. Lorsque vous voulez mettre à jour la valeur de username, vous appelez setUsername avec une nouvelle valeur.\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate(); // Initialisation de useNavigate\n\n  const register = async () => {\n    if (!username.trim() || !email.trim() || !password) {\n      alert('Merci de bien remplir tous les champs.');\n      return;\n    }\n    try {\n      const response = await API.post('/inscription', {\n        // trim() est utilisé pour supprimer les espaces blancs avant et après les valeurs des champs, pour s'assurer que l'utilisateur n'a pas entré que des espaces.\n        username: username.trim(),\n        email: email.trim(),\n        password: password\n      });\n      console.log(response.data);\n      navigate('/login'); // Redirection vers la page '/login' en supposant que l'inscription a réussi.\n    } catch (error) {\n      console.error(error);\n      alert(\"L'inscription a échoué: \" + error.response?.data || 'Erreur inconnu');\n    }\n  };\n\n  return (\n    <div className=\"signin\">\n      <h1 className=\"loginTitle\">Inscrivez-vous</h1>\n      <div className=\"wrapper_inscription\">\n        <div className=\"center_inscription\">\n          <input \n            type=\"text\" \n            placeholder=\"Identifiant\" \n            onChange={(e) => setUsername(e.target.value)} \n            // Lorsque l'utilisateur saisit un texte dans le champ input, l'événement onChange est déclenché\n            // Lorsque setUsername est appelée, React change la valeur de username dans l'état local du composant à la valeur que l'utilisateur a entrée. React détecte ensuite que l'état a changé.\n          />\n          <input \n            type=\"email\"  // Type changé en email\n            placeholder=\"Email\" \n            onChange={(e) => setEmail(e.target.value)} \n          />\n          <input \n            type=\"password\" \n            placeholder=\"Mot de passe\" \n            onChange={(e) => setPassword(e.target.value)} \n          />\n          <button className=\"submit\" onClick={register}>S'inscrire</button>\n          <p className=\"sign-up-prompt\">Vous avez déjà un compte ? <a href=\"/login\">Connectez-vous</a></p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Inscription;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}