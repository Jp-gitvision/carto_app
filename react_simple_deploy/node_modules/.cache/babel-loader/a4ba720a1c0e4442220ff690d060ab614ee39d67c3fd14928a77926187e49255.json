{"ast":null,"code":"var _jsxFileName = \"/Users/jujupeneau/Desktop/Wildcodeschool_Data_engineer/projet/Lama_dev_login/react_simple_copy/src/components/Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport 'leaflet/dist/leaflet.css';\nimport { Icon } from 'leaflet';\nimport { API } from '../services/API';\n\n// URL du fichier GeoJSON (placer le fichier dans le dossier public)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geojsonUrl = \"/departements.geojson\";\n\n// Composant principal de la carte\nconst Map = () => {\n  _s();\n  const customerIcon = new Icon({\n    iconUrl: '/img/gps.png',\n    iconSize: [28, 28]\n  });\n  const [regions, setRegions] = useState({});\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [villes, setVilles] = useState([]);\n  useEffect(() => {\n    const getdataregion = async () => {\n      try {\n        const response = await API.get(\"/api/personnes-agees-par-regions\", {\n          withCredentials: true\n        });\n        const responseData = await response.data;\n        setRegions(responseData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    getdataregion();\n  }, []);\n  useEffect(() => {\n    fetch(geojsonUrl).then(response => response.json()).then(data => setGeojsonData(data)).catch(error => console.error('Erreur lors de la récupération du fichier GeoJSON:', error));\n  }, []);\n  const handleRegionClick = async regionName => {\n    try {\n      setSelectedRegion(regionName);\n      const response = await API.get(`/api/villes-par-regions/${regionName}`, {\n        withCredentials: true\n      });\n      const responseData = await response.data;\n      if (responseData) {\n        setVilles(responseData);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '70%'\n    },\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [46.2276, 2.2137],\n      zoom: 6,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), geojsonData && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: geojsonData,\n        style: () => ({\n          color: 'white',\n          weight: 2,\n          opacity: 1,\n          dashArray: '3',\n          fillOpacity: 0.7,\n          fillColor: '#1396D9'\n        }),\n        onEachFeature: (feature, layer) => {\n          layer.on({\n            mouseover: e => {\n              const layer = e.target;\n              layer.setStyle({\n                dashArray: \"\",\n                fillColor: \"#BD0026\",\n                fillOpacity: 0.7,\n                weight: 2,\n                opacity: 1,\n                color: \"white\"\n              });\n            },\n            mouseout: e => {\n              const layer = e.target;\n              layer.setStyle({\n                fillOpacity: 0.7,\n                opacity: 1,\n                weight: 2,\n                dashArray: \"3\",\n                color: 'white',\n                fillColor: '#1396D9'\n              });\n            },\n            click: () => {\n              handleRegionClick(feature.properties.name);\n            }\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        children: selectedRegion && villes.length > 0 ? villes.map(ville => /*#__PURE__*/_jsxDEV(Marker, {\n          icon: customerIcon,\n          position: [ville.latitude, ville.longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [ville.nom, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 31\n            }, this), \"F65-79ans : \", ville.femmes_65_79, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 52\n            }, this), \"F+80ans : \", ville.femmes_80_plus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 52\n            }, this), \"H65-79ans : \", ville.hommes_65_79, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 52\n            }, this), \"H+80ans: \", ville.hommes_80_plus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)\n        }, ville.nom, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)) : Object.keys(regions).length > 0 && Object.keys(regions).map(region => /*#__PURE__*/_jsxDEV(Marker, {\n          icon: customerIcon,\n          position: [regions[region].latitude, regions[region].longitude],\n          eventHandlers: {\n            click: () => {\n              handleRegionClick(region);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"R\\xE9gion : \", region, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this), \"F65-79ans : \", regions[region].femmes_65_79, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 62\n            }, this), \"F+80ans : \", regions[region].femmes_80_plus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 62\n            }, this), \"H65-79ans : \", regions[region].hommes_65_79, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 62\n            }, this), \"H+80ans: \", regions[region].hommes_80_plus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"AL0P5H6Aat23pAHEOXpPivuO8K8=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","GeoJSON","MarkerClusterGroup","Icon","API","jsxDEV","_jsxDEV","geojsonUrl","Map","_s","customerIcon","iconUrl","iconSize","regions","setRegions","geojsonData","setGeojsonData","selectedRegion","setSelectedRegion","villes","setVilles","getdataregion","response","get","withCredentials","responseData","data","error","console","fetch","then","json","catch","handleRegionClick","regionName","style","height","width","children","center","zoom","url","fileName","_jsxFileName","lineNumber","columnNumber","color","weight","opacity","dashArray","fillOpacity","fillColor","onEachFeature","feature","layer","on","mouseover","e","target","setStyle","mouseout","click","properties","name","length","map","ville","icon","position","latitude","longitude","nom","femmes_65_79","femmes_80_plus","hommes_65_79","hommes_80_plus","Object","keys","region","eventHandlers","_c","$RefreshReg$"],"sources":["/Users/jujupeneau/Desktop/Wildcodeschool_Data_engineer/projet/Lama_dev_login/react_simple_copy/src/components/Map.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport 'leaflet/dist/leaflet.css';\nimport { Icon } from 'leaflet';\nimport {API} from '../services/API';\n\n// URL du fichier GeoJSON (placer le fichier dans le dossier public)\nconst geojsonUrl = \"/departements.geojson\";\n\n// Composant principal de la carte\nconst Map = () => {\n  const customerIcon = new Icon({\n    iconUrl: '/img/gps.png',\n    iconSize: [28, 28],\n  });\n  \n  const [regions, setRegions] = useState({});\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [villes, setVilles] = useState([]);\n\n  useEffect(() => {\n    const getdataregion = async () => {\n      try {\n        const response = await API.get(\"/api/personnes-agees-par-regions\", {\n          withCredentials: true,\n        });\n        const responseData = await response.data;\n        setRegions(responseData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    getdataregion();\n  }, []);\n\n  useEffect(() => {\n    fetch(geojsonUrl)\n      .then(response => response.json())\n      .then(data => setGeojsonData(data))\n      .catch(error => console.error('Erreur lors de la récupération du fichier GeoJSON:', error));\n  }, []);\n\n  const handleRegionClick = async (regionName) => {\n    try {\n      setSelectedRegion(regionName);\n      const response = await API.get(`/api/villes-par-regions/${regionName}`, {\n        withCredentials: true,\n      });\n      const responseData = await response.data;\n      if (responseData) {\n        setVilles(responseData);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  return (\n    <div style={{ height: '100vh', width: '70%' }}>\n      <MapContainer center={[46.2276, 2.2137]} zoom={6} style={{ height: '100%', width: '100%' }}>\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n        {geojsonData && (\n          <GeoJSON\n            data={geojsonData}\n            style={() => ({\n              color: 'white',\n              weight: 2,\n              opacity: 1,\n              dashArray: '3',\n              fillOpacity: 0.7,\n              fillColor: '#1396D9'\n            })}\n            onEachFeature={(feature, layer) => {\n              layer.on({\n                mouseover: (e) => {\n                  const layer = e.target;\n                  layer.setStyle({\n                    dashArray: \"\",\n                    fillColor: \"#BD0026\",\n                    fillOpacity: 0.7,\n                    weight: 2,\n                    opacity: 1,\n                    color: \"white\",\n                  });\n                },\n                mouseout: (e) => {\n                  const layer = e.target;\n                  layer.setStyle({\n                    fillOpacity: 0.7,\n                    opacity: 1,\n                    weight: 2,\n                    dashArray: \"3\",\n                    color: 'white',\n                    fillColor: '#1396D9'\n                  });\n                },\n                click: () => {\n                  handleRegionClick(feature.properties.name);\n                }\n              });\n            }}\n          />\n        )}\n        <MarkerClusterGroup>\n          {selectedRegion && villes.length > 0 ? (\n            villes.map(ville => (\n              <Marker icon={customerIcon} key={ville.nom} position={[ville.latitude, ville.longitude]}>\n                <Popup>\n                  {ville.nom} <br />\n                  F65-79ans : {ville.femmes_65_79} <br />\n                  F+80ans : {ville.femmes_80_plus} <br />\n                  H65-79ans : {ville.hommes_65_79} <br />\n                  H+80ans: {ville.hommes_80_plus} <br />\n                </Popup>\n              </Marker>\n            ))\n          ) : (\n            Object.keys(regions).length > 0 && Object.keys(regions).map(region => (\n              <Marker \n                icon={customerIcon}\n                key={region}\n                position={[regions[region].latitude, regions[region].longitude]}\n                eventHandlers={{\n                  click: () => {\n                    handleRegionClick(region);\n                  },\n                }}\n              >\n                <Popup>\n                  Région : {region} <br />\n                  F65-79ans : {regions[region].femmes_65_79} <br />\n                  F+80ans : {regions[region].femmes_80_plus} <br />\n                  H65-79ans : {regions[region].hommes_65_79} <br />\n                  H+80ans: {regions[region].hommes_80_plus} <br />\n                </Popup>\n              </Marker>\n            ))\n          )}\n        </MarkerClusterGroup>\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}