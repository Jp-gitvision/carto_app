{"ast":null,"code":"var _jsxFileName = \"/Users/jujupeneau/Desktop/Wildcodeschool_Data_engineer/projet/Lama_dev_login/react_simple_copy/src/components/Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport 'leaflet/dist/leaflet.css';\nimport { Icon } from 'leaflet';\nimport { API } from '../services/API';\n\n// URL du fichier GeoJSON (placer le fichier dans le dossier public)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geojsonUrl = \"/departements.geojson\";\n\n// Map.js\nconst Map = ({\n  center,\n  zoom,\n  onRegionClick,\n  onCityClick\n}) => {\n  _s();\n  const customerIcon = new Icon({\n    iconUrl: '/img/gps.png',\n    iconSize: [28, 28]\n  });\n  const [regions, setRegions] = useState([]);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [villes, setVilles] = useState([]);\n  useEffect(() => {\n    const getdataregion = async () => {\n      try {\n        const response = await API.get(\"/api/personnes-agees-par-regions\", {\n          withCredentials: true\n        });\n        const responseData = await response.data;\n        setRegions(responseData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    getdataregion();\n  }, []);\n  useEffect(() => {\n    fetch(geojsonUrl).then(response => response.json()).then(data => setGeojsonData(data)).catch(error => console.error('Erreur lors de la récupération du fichier GeoJSON:', error));\n  }, []);\n  const handleRegionClick = async regionName => {\n    try {\n      setSelectedRegion(regionName);\n      const response = await API.get(`/api/villes-par-regions/${regionName}`, {\n        withCredentials: true\n      });\n      const responseData = await response.data;\n      setVilles(responseData);\n      onRegionClick(regionName);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleCityClick = async cityName => {\n    try {\n      onCityClick(cityName);\n    } catch (error) {\n      console.error('Error fetching city data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: zoom,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this), geojsonData && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: geojsonData,\n        style: () => ({\n          color: 'white',\n          weight: 2,\n          opacity: 1,\n          dashArray: '3',\n          fillOpacity: 0.7,\n          fillColor: '#1396D9'\n        }),\n        onEachFeature: (feature, layer) => {\n          layer.on({\n            mouseover: e => {\n              const layer = e.target;\n              layer.setStyle({\n                dashArray: \"\",\n                fillColor: \"#BD0026\",\n                fillOpacity: 0.7,\n                weight: 2,\n                opacity: 1,\n                color: \"white\"\n              });\n            },\n            mouseout: e => {\n              const layer = e.target;\n              layer.setStyle({\n                fillOpacity: 0.7,\n                opacity: 1,\n                weight: 2,\n                dashArray: \"3\",\n                color: 'white',\n                fillColor: '#1396D9'\n              });\n            },\n            click: () => {\n              handleRegionClick(feature.properties.name);\n            }\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        children: selectedRegion && villes.length > 0 ? villes.map(ville => /*#__PURE__*/_jsxDEV(Marker, {\n          icon: customerIcon,\n          position: [ville.latitude, ville.longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [ville.nom, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 47\n            }, this), \"F65-79ans : \", ville.femmes_65_79, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 68\n            }, this), \"F+80ans : \", ville.femmes_80_plus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 68\n            }, this), \"H65-79ans : \", ville.hommes_65_79, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 68\n            }, this), \"H+80ans: \", ville.hommes_80_plus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 67\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCityClick(ville.nom),\n              children: \"Voir les donn\\xE9es\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 31\n          }, this)\n        }, ville.nom, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 27\n        }, this)) : Object.keys(regions).map(region => /*#__PURE__*/_jsxDEV(Marker, {\n          icon: customerIcon,\n          position: [regions[region].latitude, regions[region].longitude],\n          eventHandlers: {\n            click: () => {\n              handleRegionClick(region);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"R\\xE9gion : \", region, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 53\n            }, this), \"F65-79ans : \", regions[region].femmes_65_79, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 78\n            }, this), \"F+80ans : \", regions[region].femmes_80_plus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 78\n            }, this), \"H65-79ans : \", regions[region].hommes_65_79, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 78\n            }, this), \"H+80ans: \", regions[region].hommes_80_plus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 77\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 31\n          }, this)\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 27\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n};\n_s(Map, \"naidfNdOlsDVb1UyyyUQwkQzgjs=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","GeoJSON","MarkerClusterGroup","Icon","API","jsxDEV","_jsxDEV","geojsonUrl","Map","center","zoom","onRegionClick","onCityClick","_s","customerIcon","iconUrl","iconSize","regions","setRegions","geojsonData","setGeojsonData","selectedRegion","setSelectedRegion","villes","setVilles","getdataregion","response","get","withCredentials","responseData","data","error","console","fetch","then","json","catch","handleRegionClick","regionName","handleCityClick","cityName","style","height","width","children","url","fileName","_jsxFileName","lineNumber","columnNumber","color","weight","opacity","dashArray","fillOpacity","fillColor","onEachFeature","feature","layer","on","mouseover","e","target","setStyle","mouseout","click","properties","name","length","map","ville","icon","position","latitude","longitude","nom","femmes_65_79","femmes_80_plus","hommes_65_79","hommes_80_plus","onClick","Object","keys","region","eventHandlers","_c","$RefreshReg$"],"sources":["/Users/jujupeneau/Desktop/Wildcodeschool_Data_engineer/projet/Lama_dev_login/react_simple_copy/src/components/Map.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport 'leaflet/dist/leaflet.css';\nimport { Icon } from 'leaflet';\nimport { API } from '../services/API';\n\n// URL du fichier GeoJSON (placer le fichier dans le dossier public)\nconst geojsonUrl = \"/departements.geojson\";\n\n// Map.js\nconst Map = ({ center, zoom, onRegionClick, onCityClick }) => {\n  const customerIcon = new Icon({\n      iconUrl: '/img/gps.png',\n      iconSize: [28, 28],\n  });\n  const [regions, setRegions] = useState([]);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [villes, setVilles] = useState([]);\n\n  useEffect(() => {\n      const getdataregion = async () => {\n          try {\n              const response = await API.get(\"/api/personnes-agees-par-regions\", {\n                  withCredentials: true,\n              });\n              const responseData = await response.data;\n              setRegions(responseData);\n          } catch (error) {\n              console.error('Error fetching data:', error);\n          }\n      };\n\n      getdataregion();\n  }, []);\n\n  useEffect(() => {\n      fetch(geojsonUrl)\n          .then(response => response.json())\n          .then(data => setGeojsonData(data))\n          .catch(error => console.error('Erreur lors de la récupération du fichier GeoJSON:', error));\n  }, []);\n\n  const handleRegionClick = async (regionName) => {\n      try {\n          setSelectedRegion(regionName);\n          const response = await API.get(`/api/villes-par-regions/${regionName}`, {\n              withCredentials: true,\n          });\n          const responseData = await response.data;\n          setVilles(responseData);\n          onRegionClick(regionName);\n      } catch (error) {\n          console.error('Error fetching data:', error);\n      }\n  };\n\n  const handleCityClick = async (cityName) => {\n      try {\n          onCityClick(cityName);\n      } catch (error) {\n          console.error('Error fetching city data:', error);\n      }\n  };\n\n  return (\n      <div style={{ height: '100vh', width: '100%' }}>\n          <MapContainer center={center} zoom={zoom} style={{ height: '100%', width: '100%' }}>\n              <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n              {geojsonData && (\n                  <GeoJSON\n                      data={geojsonData}\n                      style={() => ({\n                          color: 'white',\n                          weight: 2,\n                          opacity: 1,\n                          dashArray: '3',\n                          fillOpacity: 0.7,\n                          fillColor: '#1396D9'\n                      })}\n                      onEachFeature={(feature, layer) => {\n                          layer.on({\n                              mouseover: (e) => {\n                                  const layer = e.target;\n                                  layer.setStyle({\n                                      dashArray: \"\",\n                                      fillColor: \"#BD0026\",\n                                      fillOpacity: 0.7,\n                                      weight: 2,\n                                      opacity: 1,\n                                      color: \"white\",\n                                  });\n                              },\n                              mouseout: (e) => {\n                                  const layer = e.target;\n                                  layer.setStyle({\n                                      fillOpacity: 0.7,\n                                      opacity: 1,\n                                      weight: 2,\n                                      dashArray: \"3\",\n                                      color: 'white',\n                                      fillColor: '#1396D9'\n                                  });\n                              },\n                              click: () => {\n                                  handleRegionClick(feature.properties.name);\n                              }\n                          });\n                      }}\n                  />\n              )}\n\n              <MarkerClusterGroup>\n                  {selectedRegion && villes.length > 0 ? (\n                      villes.map(ville => (\n                          <Marker icon={customerIcon} key={ville.nom} position={[ville.latitude, ville.longitude]}>\n                              <Popup>\n                                  {ville.nom} <br />\n                                  F65-79ans : {ville.femmes_65_79} <br />\n                                  F+80ans : {ville.femmes_80_plus} <br />\n                                  H65-79ans : {ville.hommes_65_79} <br />\n                                  H+80ans: {ville.hommes_80_plus} <br />\n                                  <button onClick={() => handleCityClick(ville.nom)}>Voir les données</button>\n                              </Popup>\n                          </Marker>\n                      ))\n                  ) : (\n                      Object.keys(regions).map(region => (\n                          <Marker \n                              icon={customerIcon}\n                              key={region}\n                              position={[regions[region].latitude, regions[region].longitude]}\n                              eventHandlers={{\n                                  click: () => {\n                                      handleRegionClick(region);\n                                  },\n                              }}\n                          >\n                              <Popup>\n                                  Région : {region} <br />\n                                  F65-79ans : {regions[region].femmes_65_79} <br />\n                                  F+80ans : {regions[region].femmes_80_plus} <br />\n                                  H65-79ans : {regions[region].hommes_65_79} <br />\n                                  H+80ans: {regions[region].hommes_80_plus} <br />\n                              </Popup>\n                          </Marker>\n                      ))\n                  )}\n              </MarkerClusterGroup>\n          </MapContainer>\n      </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}