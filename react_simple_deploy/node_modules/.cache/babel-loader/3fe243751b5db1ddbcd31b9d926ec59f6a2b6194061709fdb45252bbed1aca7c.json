{"ast":null,"code":"import axios from\"axios\";import{useState}from\"react\";import{useNavigate}from\"react-router-dom\";// Importez useNavigate\nimport{API}from\"../services/API\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Inscription=()=>{const[username,setUsername]=useState('');// username : La première valeur du tableau est la valeur actuelle de l'état. À l'initialisation, il s'agit de la valeur que vous avez fournie ('' dans cet exemple).\n// setUsername : La deuxième valeur est une fonction que vous pouvez appeler pour modifier cet état. Lorsque vous voulez mettre à jour la valeur de username, vous appelez setUsername avec une nouvelle valeur.\nconst[password,setPassword]=useState('');const[email,setEmail]=useState('');const navigate=useNavigate();// Initialisation de useNavigate\nconst register=async()=>{if(!username.trim()||!email.trim()||!password){alert('Merci de bien remplir tous les champs.');return;}try{const response=await API.post('/inscription',{// trim() est utilisé pour supprimer les espaces blancs avant et après les valeurs des champs, pour s'assurer que l'utilisateur n'a pas entré que des espaces.\nusername:username.trim(),email:email.trim(),password:password});console.log(response.data);navigate('/login');// Redirection vers la page '/login' en supposant que l'inscription a réussi.\n}catch(error){var _error$response;console.error(error);alert(\"L'inscription a échoué: \"+((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||'Erreur inconnu');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"signin\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"loginTitle\",children:\"Inscrivez-vous\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wrapper_inscription\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"center_inscription\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Identifiant\",onChange:e=>setUsername(e.target.value)// Lorsque l'utilisateur saisit un texte dans le champ input, l'événement onChange est déclenché\n// Lorsque setUsername est appelée, React change la valeur de username dans l'état local du composant à la valeur que l'utilisateur a entrée. React détecte ensuite que l'état a changé.\n}),/*#__PURE__*/_jsx(\"input\",{type:\"email\"// Type changé en email\n,placeholder:\"Email\",onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Mot de passe\",onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"submit\",onClick:register,children:\"S'inscrire\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"sign-up-prompt\",children:[\"Vous avez d\\xE9j\\xE0 un compte ? \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Connectez-vous\"})]})]})})]});};export default Inscription;","map":{"version":3,"names":["axios","useState","useNavigate","API","jsx","_jsx","jsxs","_jsxs","Inscription","username","setUsername","password","setPassword","email","setEmail","navigate","register","trim","alert","response","post","console","log","data","error","_error$response","className","children","type","placeholder","onChange","e","target","value","onClick","href"],"sources":["/Users/jujupeneau/Desktop/Wildcodeschool_Data_engineer/projet/Lama_dev_login/react_simple_copy/src/pages/Inscription.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Importez useNavigate\nimport {API} from \"../services/API\";\n\nconst Inscription = () => {\n  const [username, setUsername] = useState('');\n  // username : La première valeur du tableau est la valeur actuelle de l'état. À l'initialisation, il s'agit de la valeur que vous avez fournie ('' dans cet exemple).\n  // setUsername : La deuxième valeur est une fonction que vous pouvez appeler pour modifier cet état. Lorsque vous voulez mettre à jour la valeur de username, vous appelez setUsername avec une nouvelle valeur.\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate(); // Initialisation de useNavigate\n\n  const register = async () => {\n    if (!username.trim() || !email.trim() || !password) {\n      alert('Merci de bien remplir tous les champs.');\n      return;\n    }\n    try {\n      const response = await API.post('/inscription', {\n        // trim() est utilisé pour supprimer les espaces blancs avant et après les valeurs des champs, pour s'assurer que l'utilisateur n'a pas entré que des espaces.\n        username: username.trim(),\n        email: email.trim(),\n        password: password\n      });\n      console.log(response.data);\n      navigate('/login'); // Redirection vers la page '/login' en supposant que l'inscription a réussi.\n    } catch (error) {\n      console.error(error);\n      alert(\"L'inscription a échoué: \" + error.response?.data || 'Erreur inconnu');\n    }\n  };\n\n  return (\n    <div className=\"signin\">\n      <h1 className=\"loginTitle\">Inscrivez-vous</h1>\n      <div className=\"wrapper_inscription\">\n        <div className=\"center_inscription\">\n          <input \n            type=\"text\" \n            placeholder=\"Identifiant\" \n            onChange={(e) => setUsername(e.target.value)} \n            // Lorsque l'utilisateur saisit un texte dans le champ input, l'événement onChange est déclenché\n            // Lorsque setUsername est appelée, React change la valeur de username dans l'état local du composant à la valeur que l'utilisateur a entrée. React détecte ensuite que l'état a changé.\n          />\n          <input \n            type=\"email\"  // Type changé en email\n            placeholder=\"Email\" \n            onChange={(e) => setEmail(e.target.value)} \n          />\n          <input \n            type=\"password\" \n            placeholder=\"Mot de passe\" \n            onChange={(e) => setPassword(e.target.value)} \n          />\n          <button className=\"submit\" onClick={register}>S'inscrire</button>\n          <p className=\"sign-up-prompt\">Vous avez déjà un compte ? <a href=\"/login\">Connectez-vous</a></p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Inscription;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}